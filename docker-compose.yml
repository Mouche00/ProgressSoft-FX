version: "3.8"

services:
  db:
    image: postgres:17.4-alpine
    container_name: progresssoft-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    env_file:
      - .env
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./db-init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - progresssoft-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 30s

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: progresssoft-app
    restart: unless-stopped
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/${POSTGRES_DB}
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_USER}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD}
    env_file:
      - .env
    ports:
      - ${APP_PORT}:${APP_PORT}
    networks:
      - progresssoft-network
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://$${APP_HOST:localhost}:$${APP_PORT}/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 30s
#    depends_on:
#      db:
#        condition: service_healthy


volumes:
  db-data:
    name: progresssoft-db-data
    driver: local

networks:
  progresssoft-network:
    name: progresssoft-network
    driver: bridge
    attachable: true